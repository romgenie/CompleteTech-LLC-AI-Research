version: '3.8'

services:
  # Neo4j graph database for knowledge graph storage
  neo4j:
    image: neo4j:5.9.0
    container_name: ai_research_neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_default__database=ai_research
      - NEO4J_PLUGINS=["apoc"]
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
    networks:
      - ai_research_network
    healthcheck:
      test: ["CMD", "neo4j", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MongoDB for document storage
  mongodb:
    image: mongo:6.0
    container_name: ai_research_mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=ai_research_docs
    volumes:
      - mongodb_data:/data/db
    networks:
      - ai_research_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/ai_research_docs --quiet
      interval: 30s
      timeout: 10s
      retries: 5

  # API Server for accessing knowledge
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: ai_research_api
    ports:
      - "8000:8000"
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
      - NEO4J_DATABASE=ai_research
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/
      - MONGODB_DATABASE=ai_research_docs
      - API_LOG_LEVEL=info
      - API_WORKERS=4
      - JWT_SECRET=your_secret_key_here  # Change in production
      - JWT_ALGORITHM=HS256
      - CORS_ORIGINS=["http://localhost:3000"]
      - ENVIRONMENT=development
    volumes:
      - ./src:/app/src
      - ./knowledge_graph_system:/app/knowledge_graph_system
      - ./research_orchestrator:/app/research_orchestrator
      - ./research_implementation:/app/research_implementation
    depends_on:
      neo4j:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - ai_research_network
    restart: unless-stopped

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  mongodb_data:

networks:
  ai_research_network:
    driver: bridge