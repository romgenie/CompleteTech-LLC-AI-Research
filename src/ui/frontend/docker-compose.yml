version: '3.8'

services:
  # Frontend React application
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "3001:80"
    depends_on:
      - api
    networks:
      - ai-research-network

  # FastAPI backend
  api:
    image: ai-research-api:latest
    build:
      context: ../api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - MONGODB_URL=mongodb://mongodb:27017/
      - NEO4J_URI=neo4j://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - mongodb
      - neo4j
      - redis
    networks:
      - ai-research-network

  # MongoDB for document storage
  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - ai-research-network

  # Neo4j for knowledge graph
  neo4j:
    image: neo4j:latest
    restart: always
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
    volumes:
      - neo4j-data:/data
    networks:
      - ai-research-network

  # Redis for Celery and caching
  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ai-research-network

  # Celery worker for background tasks
  worker:
    image: ai-research-api:latest
    command: celery -A app.tasks.worker worker --loglevel=info
    depends_on:
      - api
      - redis
    environment:
      - MONGODB_URL=mongodb://mongodb:27017/
      - NEO4J_URI=neo4j://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=password
      - REDIS_URL=redis://redis:6379/0
    networks:
      - ai-research-network

networks:
  ai-research-network:
    driver: bridge

volumes:
  mongodb-data:
  neo4j-data:
  redis-data: