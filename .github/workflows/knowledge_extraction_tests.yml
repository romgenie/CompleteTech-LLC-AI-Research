name: Knowledge Extraction Tests

on:
  push:
    branches: [main]
    paths:
      - 'src/research_orchestrator/knowledge_extraction/**'
      - 'tests/research_orchestrator/knowledge_extraction/**'
      - '.github/workflows/knowledge_extraction_tests.yml'
  pull_request:
    branches: [main]
    paths:
      - 'src/research_orchestrator/knowledge_extraction/**'
      - 'tests/research_orchestrator/knowledge_extraction/**'
      - '.github/workflows/knowledge_extraction_tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10]
        test-type: [unit, integration, e2e, property, edge]

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt
      
      - name: Run ${{ matrix.test-type }} tests
        run: |
          cd tests/research_orchestrator/knowledge_extraction
          chmod +x run_tests.sh
          ./run_tests.sh -t ${{ matrix.test-type }}
      
      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.python-version }}-${{ matrix.test-type }}
          path: tests/research_orchestrator/knowledge_extraction/test-report.html
          if-no-files-found: ignore

  benchmark:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt
      
      - name: Run benchmarks
        run: |
          cd tests/research_orchestrator/knowledge_extraction
          python -m benchmark.run_benchmarks
      
      - name: Upload benchmark results
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: tests/research_orchestrator/knowledge_extraction/benchmark/report.html
          if-no-files-found: ignore

  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install pytest-cov
      
      - name: Run tests with coverage
        run: |
          cd tests/research_orchestrator/knowledge_extraction
          python -m pytest --cov=../../../src/research_orchestrator/knowledge_extraction --cov-report=xml
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./tests/research_orchestrator/knowledge_extraction/coverage.xml
          flags: knowledge_extraction
          fail_ci_if_error: false